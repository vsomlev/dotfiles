servers = (
  { address = "eu.irc6.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "open.ircnet.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "irc.efnet.org"; chatnet = "EFNet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
  },
  { address = "irc.oftc.net"; chatnet = "OFTC"; port = "6667"; },
  {
    address = "irc.gamesurge.net";
    chatnet = "GameSurge";
    port = "6667";
  },
  { address = "irc.webchat.org"; chatnet = "WebChat"; port = "6667"; },
  { address = "irc.rizon.net"; chatnet = "Rizon"; port = "6667"; },
  { address = "irc.link-net.org"; chatnet = "LinkNet"; port = "6667"; },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "irc.freenode.net";
    chatnet = "Freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

ignores = (
    {
        level = "JOINS PARTS QUITS";
        channels = ( "#archlinux", "#vim");
        network  = "FreeNode";
    },
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "30";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  OFTC = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  GameSurge = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  WebChat = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  Rizon = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  LinkNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  SILC = { type = "SILC"; };
  Freenode = {
    type = "IRC";
    autosendcmd = "/msg NickServ identify hunter2; wait 2000";
  };
};

channels = (
  { name = "archlinux"; chatnet = "Freenode"; autojoin = "Yes"; }
);

aliases = {
  # CHANNEL ALIASES
  TFW = "join #tfwiki";
  # CHANNEL ALIASES
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = { real_name = "Unknown"; user_name = "spupy"; nick = "spupy"; };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = {
    bell_beeps = "yes";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
  };
};

#################
# COPIED SHIT
#################
# print timestamp/servertag at the end of line, not at beginning
info_eol = "false";

# these characters are automatically replaced with specified color
# (dark grey by default)
replaces = { "[]" = "%g$*%n"; };
abstracts = {

  ############# generic ###############################

  # text to insert at the beginning of each non-message line
  #line_start = "%g//%n ";
  line_start = "";

  # timestamp styling, nothing by default
  timestamp = "%K$0-%n";

  # any kind of text that needs hilighting, default is to bold
  hilight = "%_$*%_";

  # any kind of error message, default is bright red
  error = "%R$*%n";

  # channel name is printed
  channel = "%b$*%n";

  # nick is printed
  nick = "%_$*%_";

  # nick host is printed
  nickhost = "%g$*";

  # server name is printed
  server = "%_$*%_";

  # some kind of comment is printed
  comment = "%n(%b\"$*\"%n);";

  # reason for something is printed (part, quit, kick, ..)
  reason = "{comment $*}";

  # mode change is printed ([+o nick])
  mode = "{comment $*}";

  ## channel specific messages

  # highlighted nick/host is printed (joins)
  channick_hilight = "%g$*%N";
  chanhost_hilight = "{nickhost $*}";

  # nick/host is printed (parts, quits, etc.)
  channick = "$*";
  chanhost = "{nickhost $*}";

  # highlighted channel name is printed
  channelhilight = "%g$*%n";

  # ban/ban exception/invite list mask is printed
  ban = "$*";

  ########### messages #################################

  # the basic styling of how to print message, $0 = nick mode, $1 = nick
  # msgnick = "$1-$0%K·%N %|";
  msgnick = "$1-$0%K│%N %|";

  # $0 = nick mode, $1 = nick
  ownmsgnick = "{msgnick $0$1}";
  ownnick = "%m$*%n";

  # public message in channel, $0 = nick mode, $1 = nick
  pubmsgnick = "{msgnick $0$1}";
  pubnick = "%N $*%n ";

  # public message in channel meant for me, $0 = nick mode, $1 = nick
  pubmsgmenick = "{msgnick $0$1}%r";
  menick = "%R$*%n";

  # public highlighted message in channel
  # $0 = highlight color, $1 = nick mode, $2 = nick
  pubmsghinick = "{msgnick $1$0$2%n}%r";

  # channel name is printed with message
  msgchannel = "%K:%m$*%n";

  # private message, $0 = nick, $1 = host
  privmsg = "$0=%b\"$1-\"%n ";

  # private message from you, $0 = "msg", $1 = target nick
  ownprivmsg = "$0=%b\"$1-\"%n ";

  # private message in query
  # privmsgnick = "{msgnick $*}";
  privmsgnick = "%g<%N %|";

  # own private message in query
  #ownprivmsgnick = "{privmsgnick $*}";
  ownprivmsgnick = "%r>%N %|";
  #ownprivnick = "$*";


  ########## Actions (/ME stuff) #########################

  # generic one that's used by most actions
  action = "  %y$* %Y* %y%|";

  # own action, both private/public
  # ownaction = "{action $*}";
  ownaction = "  %y$* %Y*%N%y";

  # own action with target, both private/public
  ownaction_target = "{action $*}";

  # private action sent by others
  pvtaction = "{action $*}";
  pvtaction_query = "{action $*}";

  # public action sent by others
  pubaction = "{action $*}";


  ########## other IRC events #############################

  # whois
  whois = "%#    $[8]0 = $1-;";

  # notices
  ownnotice = "%NNote n = %Mnew%n $0 ($1-) ";
  notice = "%M$*%n ";
  pubnotice_channel = " %N($*)";
  pvtnotice_host = " %N($*)";
  servernotice = " %N($*)";

  # CTCPs
  ownctcp = "%NCTCP c = %Mnew%n $0 ($1-) ";
  ctcp = "%N$*%n";

  # wallops
  wallop = "%K$*%n: ";
  wallop_nick = "%n$*";
  wallop_action = "%K * $*%n ";

  # netsplits
  netsplit = "Netsplit nsplit = %b\"$*\"%n";
  netjoin = "Netjoin njoin = %b\"$*\"%n";

  # /names list
  names_prefix = "                ";
  names_nick = "%_%R$0%_%n$1- ";
  names_nick_op = "{names_nick $*}";
  names_nick_halfop = "{names_nick $*}";
  names_nick_voice = "{names_nick $*}";
  names_users = "       %MServer%n %Y=%n names($1)";
  names_channel = "\"%b$*\"%n";

  # DCC
  dcc = "%g$*%n";
  dccfile = "%_$*%_";

  # DCC chat, own msg/action
  dccownmsg = "%g /* $0 ($1-) */";
  dccownnick = "$*%n";
  dccownquerynick = "$*%n";
  dccownaction = "{action $*}";
  dccownaction_target = "{action $*}";

  # DCC chat, others
  dccmsg = "%g/* $1- ($0) */";
  dccquerynick = "%g$*%n";
  dccaction = "{action $*}";

  ######## statusbar/topicbar ############################

  # default background for all statusbars. You can also give
  # the default foreground color for statusbar items.
  sb_background = "%K%0";

  # default backround for "default" statusbar group
  #sb_default_bg = "%4";
  # background for prompt / input line
  sb_prompt_bg = "%n";
  # background for info statusbar
  #sb_info_bg = "%8";
  # background for topicbar (same default)
  #sb_topic_bg = "%4";

  # text at the beginning of statusbars. sb-item already puts
  # space there,so we don't use anything by default.
  sbstart = "";
  # text at the end of statusbars. Use space so that it's never
  # used for anything.
  sbend = "";

  topicsbstart = "%BChannel: %b\"$*";
  topicsbend = "$*%b\"";

  prompt = "%r:%n ";

  sb = "$* ";
  sbmode = " %K[%g%g+%n$*%K]";
  sbaway = " %g/* zZzZ */%n";
  sbservertag = ":%r$0%n";
  sbnickmode = "$0";

  # activity in statusbar

  # ',' separator
  sb_act_sep = " ";
  # normal text
  sb_act_text = "%K$*";
  # public message
  sb_act_msg = "%G$*";
  # hilight
  sb_act_hilight = "%r$*%n";
  # hilight with specified color, $0 = color, $1 = text
  sb_act_hilight_color = "%r$1-%n";
};

########################################################

formats = {
  "fe-common/core" = {
    line_start = "{line_start}";
    line_start_irssi = "{line_start}";

    join = "%K{channick $[-13]0} %G>%K has joined";
    part = "%K{channick $[-13]0} %R<%K has left {channel $2}";
    kick = "%K{channick $[-13]0} %R<%K kicked by {nick $2} {reason %C$3}";
    quit = "%K{channick $[-13]0} %R<%K has quit irc";
    quit_once = "{channel $3} {channick $0} {chanhost $1} %kquit {reason %C$2}";
    nick_changed = "{channick $[-13]0} %Y= {channick_hilight $1}";
    your_nick_changed = "{channick $[-13]0} %Y= {channick_hilight $1}";

    pubmsg = "{pubmsgnick $2 {pubnick \00312$[-11]0}}$1";
    own_msg = "{ownmsgnick {ownnick $[-13]0$2}}$1";
    own_msg_channel = "{ownmsgnick {ownnick $[-13]0$3}{msgchannel $1}}$2";
    own_msg_private_query = "{ownprivmsgnick {ownprivnick $[-13]2}}$1";
    pubmsg_me = "{pubmsgmenick {menick $[-13]0}$2}$1";
    pubmsg_me_channel = "{pubmsgmenick {menick $[-13]0$3}{msgchannel $1}}$2";
    # pubmsg_hilight = "{pubmsghinick $0 $0 $[-13]1$3%n}$2";
    pubmsg_hilight = "{pubmsghinick $0 $0 %R$[-13]1$3%n}$2";
    pubmsg_hilight_channel = "{pubmsghinick $0 $[-13]1$4{msgchannel $2}}$3";
    pubmsg_channel = "{pubmsgnick {pubnick %G$[-13]0}$2}$1";
    msg_private_query = "{privmsgnick $[-13]0}$2";
    new_topic = "        %ctopic %K= %|%B'$2' %non %b$1%n%K[set by {nick %y$0}]";

    endofnames = "               Total of {hilight $1} nicks {comment {hilight $2} ops, {hilight $3} halfops, {hilight $4} voices, {hilight $5} normal}";
  };
  "fe-common/irc" = {
    own_action = "{ownaction $[-11]0} $1";
    action_private = "{pvtaction $[-11]0}$1";
    action_private_query = "{pvtaction_query $[-11]0} $2";
    action_public = "{pubaction $[-11]0}$1";
  };
};
